@using Entities
@using Bussines.Bussines_Product
@using Bussines.Bussines_Category

<hr />
<select class=" form-control" @onchange="CategoryChanged">
    <option value="">Seleccione Categoria :</option>
    @foreach (var category in categories)
    {
        <option value="@category.CategoryId">@category.CategoryName</option>
    }
</select>
<hr />
<table class="table table-hover table-bordered">
    <thead>
        <tr>
            <th>Referencia</th>
            <th>Nombre Producto</th>
            <th>Categoria</th>
            <th>Cantidad</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in temporalProducts)
        {
            <tr>
                <td>@product.ProductId</td>
                <td>@product.ProductName</td>
                <td>@product.IdCategory</td>
                <td>@product.TotalQuantity</td>
                <td><a href="product/update/@product.ProductId">Editar</a></td>
            </tr>
        }
    </tbody>

</table>

@code {
    List<ProductEntity> products = new List<ProductEntity>();
    List<ProductEntity> temporalProducts = new List<ProductEntity>();
    List<CategoryEntity> categories = new List<CategoryEntity>();
    ReadCategories ReadCategories = new ReadCategories();
    ReadProduct ReadProduct = new ReadProduct();

    string message;
    protected override async Task OnInitializedAsync()
    {
        products = ReadProduct.ItemList();
        temporalProducts = products;
        categories = ReadCategories.ItemList();
    }
    private void CategoryChanged(ChangeEventArgs e)
    {
        temporalProducts = products.Where(c => c.IdCategory == e.Value.ToString()).ToList();
    }
}
